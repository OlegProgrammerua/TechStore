'use client';
import { useState, useEffect } from 'react';
import { pureFinalPropsSelectorFactory } from 'react-redux/es/connect/selectorFactory';
import { useSelector } from 'react-redux';
import Footer from './components/Footer';
import Layout from '../layout';
import Head from 'next/head';

const Page: React.FC = () => {
  interface Data {
    email: string;
    message: string;
  }

  const [error, setError] = useState<string>('');
  const [formData, setFormData] = useState<Data>({
    email: '',
    message: '',
  });

  const statusBar = useSelector((state: any) => state.bar.setBar);

  const ValidEmail = (email: string) => {
    const regexEmail = /^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$/;
    const isValid = regexEmail.test(email);
    if (email.trim() === '') {
      return 'Email is required';
    } else if (!isValid) {
      return 'Invalid Email';
    } else {
      return '';
    }
  };

  const handleChange = (
    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>
  ) => {
    const { value, name } = event.target;
    setFormData((prevData) => ({
      ...prevData,
      [name]: value,
    }));
    if (name === 'email') {
      const validMsg = ValidEmail(value);
      setError(validMsg);
      if (value === '') {
        setError('');
      }
    }
  };

  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {
    event.preventDefault();
    const emailError = ValidEmail(formData.email);
    if (formData.email === '') {
      setError('Email required');
    }
    if (emailError) {
      setError(emailError);
      alert(error);
    } else {
      alert('Sucsses');
    }
  };

  const handleBlur = (event: React.FocusEvent<HTMLInputElement>) => {
    const { name, value } = event.target;
    const errorMsg = ValidEmail(value);
    setError(errorMsg);
  };
  return (
    <Layout>
      <Head>
        <title>Contact Us</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/logo.svg" />
      </Head>
      <div
        className={`flex transition-all ${
          statusBar ? 'w-3/4' : 'w-full'
        } py-10 px-3 flex-col text-center items-center relative max-[500px]:pl-12 `}
      >
        <div className="w-full flex justify-center flex-col text-2xl uppercase text-yellow-400 font-bold max-[1000px]:text-xl max-[700px]:text-base max-[350px]:text-xs">
          <h1>Contact Us</h1>
          <p>Any question or remarks?Just write us a message</p>
        </div>

        <form
          onSubmit={handleSubmit}
          className="flex justify-center items-center flex-col mt-10 w-5/12 min-h-1/4 bg-gray-400 dark:bg-gray-600 rounded-xl px-5 py-10 mb-24 max-[1000px]:justify-start max-[1000px]:py-4 max-[1000px]:min-h-[0px] max-[768px]:w-10/12 max-[350px]:w-full "
          noValidate
        >
          <div className="w-full text-start">
            <label
              className="text-xl my-2 font-bold text-center mb-2 max-[768px]:text-base max-[350px]:text-xs"
              htmlFor=""
            >
              Email
            </label>

            <div
              className={`mb-2 text-red-500 text-xl transition-all duration-200 ease-in-out  max-[768px]:text-[14px]   ${
                error ? 'opacity-100' : 'opacity-0'
              }`}
            >
              {error}
            </div>

            <input
              className="bg-white rounded-full w-full py-2 text-xl pl-5 focus:outline-none dark:bg-gray-700 max-[768px]:py-0.5"
              type="email"
              name="email"
              id="email"
              value={formData.email}
              onChange={handleChange}
              onBlur={handleBlur}
              required
            />
          </div>

          <label
            className="text-left text-xl my-2 font-bold max-[400px]:text-[16px]  "
            htmlFor=""
          >
            Message
          </label>
          <textarea
            className="rounded-lg w-full p-1 focus:outline-none dark:bg-gray-700 "
            name="message"
            id="message"
            value={formData.message}
            cols={50}
            rows={10}
            required
            onChange={handleChange}
          ></textarea>

          <button
            type="submit"
            className="inline-block w-2/4 bg-yellow-500 mt-10 text-center items-center py-5 text-2xl rounded-full text-white font-bold hover:bg-blue-500 hover:text-black transform hover:scale-110 transtion-all duration-500 ease-in-out max-[1000px]:py-2 max-[1000px]:px-2 max-[768px]:text-base max-[350px]:text-xs"
          >
            Submit
          </button>
        </form>
        <Footer />
      </div>
    </Layout>
  );
};

export default Page;
